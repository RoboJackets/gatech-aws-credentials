name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
        architecture: x64

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache user packages
      uses: actions/cache@v2
      id: cache-pip
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}

    - name: Bootstrap poetry
      run: |
        python3.8 -m pip install --user poetry &&
        echo "::add-path::/home/runner/.local/bin"

    - name: Cache virtualenv
      uses: actions/cache@v2
      id: cache-virtualenv
      with:
        path: /home/runner/.cache/pypoetry/virtualenvs/
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

    - run: poetry install

    - run: poetry run black --check gatech_aws_credentials.py

    - run: poetry run flake8 gatech_aws_credentials.py

    - run: poetry run pylint gatech_aws_credentials

    - run: poetry run mypy --check gatech_aws_credentials.py
